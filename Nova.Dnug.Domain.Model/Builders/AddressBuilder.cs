namespace Nova.Dnug.Domain.Model.Builders
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.Linq;
    using Nova.Dnug.Domain.Model.Properties;

    /// <summary>
    /// Builder class for creating instances of the <see cref="Address"/> class
    /// </summary>
    public class AddressBuilder
    {
        /// <summary>
        /// An instance of <see cref="Random"/> to ensure the contents of the <see cref="Address"/> instances
        /// generated by the <see cref="AddressBuilder"/> contain random property values
        /// </summary>
        private readonly Random random;

        /// <summary>
        /// A preloaded collection of states from the resources text file
        /// </summary>
        private readonly IEnumerable<string> states;

        /// <summary>
        /// A preloaded collection of city names from the resources text file
        /// </summary>
        private readonly IEnumerable<string> cities;

        /// <summary>
        /// A preloaded collection of street names from the resources text file
        /// </summary>
        private readonly IEnumerable<string> streets;

        /// <summary>
        /// Initializes a new instance of the <see cref="AddressBuilder"/> class.
        /// </summary>
        public AddressBuilder()
        {
            this.random = new Random();
            this.states = Resources.States.Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
            this.cities = Resources.Cities.Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
            this.streets = Resources.Streets.Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
        }

        /// <summary>
        /// Builds a randomly generated instance of the <see cref="Address"/> entity
        /// </summary>
        /// <returns>
        /// A randomly generated <see cref="Address"/> instance
        /// </returns>
        public Address Build()
        {
            return new Address
                {
                    Id = Guid.NewGuid(),
                    HouseNameOrNumber = this.random.Next(1, 100).ToString(CultureInfo.InvariantCulture),
                    Street = this.streets.Take(this.random.Next(1, this.streets.Count() - 1)).Reverse().First(),
                    City = this.cities.Take(this.random.Next(1, this.cities.Count() - 1)).Reverse().First(),
                    State = this.states.Take(this.random.Next(1, this.states.Count() - 1)).Reverse().First(),
                    ZipCode = this.random.Next(10000, 99999).ToString(CultureInfo.InvariantCulture)
                };
        }
    }
}
